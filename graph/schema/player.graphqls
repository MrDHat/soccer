type Player {
  """
  The id of the player
  """
  id: ID!
  """
  The created at timestamp of the player in unix epoch format
  """
  createdAt: Int
  """
  The updated at timestamp of the player in unix epoch format
  """
  updatedAt: Int
  """
  The first name of the player
  """
  firstName: String
  """
  The last name of the player
  """
  lastName: String
  """
  The age of the player
  """
  age: Int
  """
  Current value of the player in dollars
  """
  currentValueInDollars: Int
  """
  Type of the player
  """
  type: PlayerType
  """
  The country of the player
  """
  country: String
  """
  The team that the player belongs to
  """
  team: Team
}

type PlayerList {
  totalPage: Int
  currentPage: Int
  totalRecords: Int
  data: [Player!]!
}

enum PlayerType {
  goalkeeper
  defender
  midfielder
  attacker
}

input TeamPlayerListInput {
  pagination: PaginationInput
}

input UpdatePlayerInput {
  """
  The id of the player
  """
  id: ID!
  """
  The first name of the player
  """
  firstName: String
  """
  The last name of the player
  """
  lastName: String
  """
  The country of the player
  """
  country: String
}

input MovePlayerToTransferInput {
  """
  The id of the player
  """
  id: ID!
  """
  The amount in dollars that the player will be transfered for
  """
  amountInDollars: Int!
}
